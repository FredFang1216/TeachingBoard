// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      String   @default("TEACHER") // TEACHER or ADMIN
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  groups Group[]

  @@map("users")
}

model Group {
  id          String   @id @default(cuid())
  name        String
  description String?
  teacherId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  teacher User     @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  students Student[]

  @@map("groups")
}

model Student {
  id          String   @id @default(cuid())
  name        String
  height      Float?   // 身高 (cm)
  weight      Float?   // 体重 (kg)
  vitalCapacity Float? // 肺活量 (ml)
  sitAndReach Float?   // 坐位体前屈 (cm)
  run50m      Float?   // 50米跑 (秒)
  ropeSkipping Int?    // 跳绳 (次)
  heartRate   Int?     // 心率 (bpm)
  singleLegStand Float? // 单脚站立时间 (秒)
  totalScore  Int      @default(0)
  groupId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  group        Group         @relation(fields: [groupId], references: [id], onDelete: Cascade)
  scoreRecords ScoreRecord[]

  @@unique([name, groupId])
  @@map("students")
}

model ScoreRecord {
  id        String   @id @default(cuid())
  studentId String
  points    Int      // 正数为加分，负数为减分
  reason    String   // 备注原因
  createdAt DateTime @default(now())

  student Student @relation(fields: [studentId], references: [id], onDelete: Cascade)

  @@map("score_records")
}

